{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Hweet.js","components/HweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Hweet","hweetObj","isOwner","editing","setEditing","text","newHweet","setNewHweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","alt","faTrash","faPencilAlt","HweetFactory","userObj","hweet","setHweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","hweets","setHweets","useEffect","orderBy","onSnapshot","snapshot","hweetArray","docs","map","marginTop","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSzie","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b89120.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUTKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value }\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data;\r\n    try {\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name }\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Hweet = ({ hweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newHweet, setNewHweet] = useState(hweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const isOk = window.confirm(\"Are you sure you want to delete this hweet?\");\r\n    if (isOk) {\r\n      await dbService.doc(`hweets/${hweetObj.id}`).delete();\r\n      await storageService.refFromURL(hweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`hweets/${hweetObj.id}`).update({\r\n      text: newHweet\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChenge = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNewHweet(value);\r\n  };\r\n  return (\r\n    <div className=\"hweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container hweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your hweet\"\r\n              value={newHweet}\r\n              required\r\n              onChange={onChenge}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Hweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>{\" \"}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{hweetObj.text}</h4>\r\n          {hweetObj.attachmentUrl && (\r\n            <img src={hweetObj.attachmentUrl} alt={hweetObj.text} />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"hweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HweetFactory = ({ userObj }) => {\r\n  const [hweet, setHweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (hweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const hweetObj = {\r\n      text: hweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    };\r\n    await dbService.collection(\"hweets\").add(hweetObj);\r\n    setHweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setHweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files }\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result }\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachmentClick = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={hweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt={hweet}\r\n            style={{ backgroundImage: attachment }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default HweetFactory;\r\n","import Hweet from \"components/Hweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport HweetFactory from \"components/HweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [hweets, setHweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"hweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const hweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setHweets(hweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <HweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {hweets.map((hweet) => (\r\n          <Hweet\r\n            key={hweet.id}\r\n            hweetObj={hweet}\r\n            isOwner={hweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSzie: 12\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        ></AppRouter>\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}